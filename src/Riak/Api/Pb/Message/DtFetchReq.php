<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_dt.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The equivalent of KV's "RpbGetReq", results in a DtFetchResp. The
 * request-time options are limited to ones that are relevant to
 * structured data-types.
 *
 * Generated from protobuf message <code>DtFetchReq</code>
 */
class DtFetchReq extends \Google\Protobuf\Internal\Message
{
    /**
     * The identifier: bucket, key and bucket-type
     *
     * Generated from protobuf field <code>bytes bucket = 1;</code>
     */
    protected $bucket = '';
    /**
     * Generated from protobuf field <code>bytes key = 2;</code>
     */
    protected $key = '';
    /**
     * Generated from protobuf field <code>bytes type = 3;</code>
     */
    protected $type = '';
    /**
     * Request options
     *
     * Generated from protobuf field <code>uint32 r = 4;</code>
     */
    protected $r = null;
    /**
     * Generated from protobuf field <code>uint32 pr = 5;</code>
     */
    protected $pr = null;
    /**
     * Generated from protobuf field <code>bool basic_quorum = 6;</code>
     */
    protected $basic_quorum = null;
    /**
     * Generated from protobuf field <code>bool notfound_ok = 7;</code>
     */
    protected $notfound_ok = null;
    /**
     * Generated from protobuf field <code>uint32 timeout = 8;</code>
     */
    protected $timeout = null;
    /**
     * Experimental, may change/disappear
     *
     * Generated from protobuf field <code>bool sloppy_quorum = 9;</code>
     */
    protected $sloppy_quorum = null;
    /**
     * Experimental, may change/disappear
     *
     * Generated from protobuf field <code>uint32 n_val = 10;</code>
     */
    protected $n_val = null;
    /**
     * For read-only requests or context-free operations, you can set
     * this to false to reduce the size of the response payload.
     *
     * Generated from protobuf field <code>bool include_context = 11;</code>
     */
    protected $include_context = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $bucket
     *           The identifier: bucket, key and bucket-type
     *     @type string $key
     *     @type string $type
     *     @type int $r
     *           Request options
     *     @type int $pr
     *     @type bool $basic_quorum
     *     @type bool $notfound_ok
     *     @type int $timeout
     *     @type bool $sloppy_quorum
     *           Experimental, may change/disappear
     *     @type int $n_val
     *           Experimental, may change/disappear
     *     @type bool $include_context
     *           For read-only requests or context-free operations, you can set
     *           this to false to reduce the size of the response payload.
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakDt::initOnce();
        parent::__construct($data);
    }

    /**
     * The identifier: bucket, key and bucket-type
     *
     * Generated from protobuf field <code>bytes bucket = 1;</code>
     * @return string
     */
    public function getBucket()
    {
        return $this->bucket;
    }

    /**
     * The identifier: bucket, key and bucket-type
     *
     * Generated from protobuf field <code>bytes bucket = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setBucket($var)
    {
        GPBUtil::checkString($var, False);
        $this->bucket = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes key = 2;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * Generated from protobuf field <code>bytes key = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes type = 3;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>bytes type = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, False);
        $this->type = $var;

        return $this;
    }

    /**
     * Request options
     *
     * Generated from protobuf field <code>uint32 r = 4;</code>
     * @return int
     */
    public function getR()
    {
        return isset($this->r) ? $this->r : 0;
    }

    public function hasR()
    {
        return isset($this->r);
    }

    public function clearR()
    {
        unset($this->r);
    }

    /**
     * Request options
     *
     * Generated from protobuf field <code>uint32 r = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setR($var)
    {
        GPBUtil::checkUint32($var);
        $this->r = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 pr = 5;</code>
     * @return int
     */
    public function getPr()
    {
        return isset($this->pr) ? $this->pr : 0;
    }

    public function hasPr()
    {
        return isset($this->pr);
    }

    public function clearPr()
    {
        unset($this->pr);
    }

    /**
     * Generated from protobuf field <code>uint32 pr = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setPr($var)
    {
        GPBUtil::checkUint32($var);
        $this->pr = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool basic_quorum = 6;</code>
     * @return bool
     */
    public function getBasicQuorum()
    {
        return isset($this->basic_quorum) ? $this->basic_quorum : false;
    }

    public function hasBasicQuorum()
    {
        return isset($this->basic_quorum);
    }

    public function clearBasicQuorum()
    {
        unset($this->basic_quorum);
    }

    /**
     * Generated from protobuf field <code>bool basic_quorum = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setBasicQuorum($var)
    {
        GPBUtil::checkBool($var);
        $this->basic_quorum = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool notfound_ok = 7;</code>
     * @return bool
     */
    public function getNotfoundOk()
    {
        return isset($this->notfound_ok) ? $this->notfound_ok : false;
    }

    public function hasNotfoundOk()
    {
        return isset($this->notfound_ok);
    }

    public function clearNotfoundOk()
    {
        unset($this->notfound_ok);
    }

    /**
     * Generated from protobuf field <code>bool notfound_ok = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setNotfoundOk($var)
    {
        GPBUtil::checkBool($var);
        $this->notfound_ok = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 timeout = 8;</code>
     * @return int
     */
    public function getTimeout()
    {
        return isset($this->timeout) ? $this->timeout : 0;
    }

    public function hasTimeout()
    {
        return isset($this->timeout);
    }

    public function clearTimeout()
    {
        unset($this->timeout);
    }

    /**
     * Generated from protobuf field <code>uint32 timeout = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkUint32($var);
        $this->timeout = $var;

        return $this;
    }

    /**
     * Experimental, may change/disappear
     *
     * Generated from protobuf field <code>bool sloppy_quorum = 9;</code>
     * @return bool
     */
    public function getSloppyQuorum()
    {
        return isset($this->sloppy_quorum) ? $this->sloppy_quorum : false;
    }

    public function hasSloppyQuorum()
    {
        return isset($this->sloppy_quorum);
    }

    public function clearSloppyQuorum()
    {
        unset($this->sloppy_quorum);
    }

    /**
     * Experimental, may change/disappear
     *
     * Generated from protobuf field <code>bool sloppy_quorum = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setSloppyQuorum($var)
    {
        GPBUtil::checkBool($var);
        $this->sloppy_quorum = $var;

        return $this;
    }

    /**
     * Experimental, may change/disappear
     *
     * Generated from protobuf field <code>uint32 n_val = 10;</code>
     * @return int
     */
    public function getNVal()
    {
        return isset($this->n_val) ? $this->n_val : 0;
    }

    public function hasNVal()
    {
        return isset($this->n_val);
    }

    public function clearNVal()
    {
        unset($this->n_val);
    }

    /**
     * Experimental, may change/disappear
     *
     * Generated from protobuf field <code>uint32 n_val = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setNVal($var)
    {
        GPBUtil::checkUint32($var);
        $this->n_val = $var;

        return $this;
    }

    /**
     * For read-only requests or context-free operations, you can set
     * this to false to reduce the size of the response payload.
     *
     * Generated from protobuf field <code>bool include_context = 11;</code>
     * @return bool
     */
    public function getIncludeContext()
    {
        return isset($this->include_context) ? $this->include_context : false;
    }

    public function hasIncludeContext()
    {
        return isset($this->include_context);
    }

    public function clearIncludeContext()
    {
        unset($this->include_context);
    }

    /**
     * For read-only requests or context-free operations, you can set
     * this to false to reduce the size of the response payload.
     *
     * Generated from protobuf field <code>bool include_context = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeContext($var)
    {
        GPBUtil::checkBool($var);
        $this->include_context = $var;

        return $this;
    }

}

