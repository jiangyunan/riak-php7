<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_kv.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * List buckets request
 *
 * Generated from protobuf message <code>RpbListBucketsReq</code>
 */
class RpbListBucketsReq extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 timeout = 1;</code>
     */
    protected $timeout = null;
    /**
     * Generated from protobuf field <code>bool stream = 2;</code>
     */
    protected $stream = null;
    /**
     * Bucket type, if not set we assume the 'default' type
     *
     * Generated from protobuf field <code>bytes type = 3;</code>
     */
    protected $type = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $timeout
     *     @type bool $stream
     *     @type string $type
     *           Bucket type, if not set we assume the 'default' type
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakKv::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 timeout = 1;</code>
     * @return int
     */
    public function getTimeout()
    {
        return isset($this->timeout) ? $this->timeout : 0;
    }

    public function hasTimeout()
    {
        return isset($this->timeout);
    }

    public function clearTimeout()
    {
        unset($this->timeout);
    }

    /**
     * Generated from protobuf field <code>uint32 timeout = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkUint32($var);
        $this->timeout = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool stream = 2;</code>
     * @return bool
     */
    public function getStream()
    {
        return isset($this->stream) ? $this->stream : false;
    }

    public function hasStream()
    {
        return isset($this->stream);
    }

    public function clearStream()
    {
        unset($this->stream);
    }

    /**
     * Generated from protobuf field <code>bool stream = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkBool($var);
        $this->stream = $var;

        return $this;
    }

    /**
     * Bucket type, if not set we assume the 'default' type
     *
     * Generated from protobuf field <code>bytes type = 3;</code>
     * @return string
     */
    public function getType()
    {
        return isset($this->type) ? $this->type : '';
    }

    public function hasType()
    {
        return isset($this->type);
    }

    public function clearType()
    {
        unset($this->type);
    }

    /**
     * Bucket type, if not set we assume the 'default' type
     *
     * Generated from protobuf field <code>bytes type = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, False);
        $this->type = $var;

        return $this;
    }

}

