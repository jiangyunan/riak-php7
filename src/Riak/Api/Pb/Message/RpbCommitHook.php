<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A commit hook, which may either be a modfun or a JavaScript named
 * function
 *
 * Generated from protobuf message <code>RpbCommitHook</code>
 */
class RpbCommitHook extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.RpbModFun modfun = 1;</code>
     */
    protected $modfun = null;
    /**
     * Generated from protobuf field <code>bytes name = 2;</code>
     */
    protected $name = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Basho\Riak\Api\Pb\Message\RpbModFun $modfun
     *     @type string $name
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\Riak::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.RpbModFun modfun = 1;</code>
     * @return \Basho\Riak\Api\Pb\Message\RpbModFun
     */
    public function getModfun()
    {
        return isset($this->modfun) ? $this->modfun : null;
    }

    public function hasModfun()
    {
        return isset($this->modfun);
    }

    public function clearModfun()
    {
        unset($this->modfun);
    }

    /**
     * Generated from protobuf field <code>.RpbModFun modfun = 1;</code>
     * @param \Basho\Riak\Api\Pb\Message\RpbModFun $var
     * @return $this
     */
    public function setModfun($var)
    {
        GPBUtil::checkMessage($var, \Basho\Riak\Api\Pb\Message\RpbModFun::class);
        $this->modfun = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * Generated from protobuf field <code>bytes name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, False);
        $this->name = $var;

        return $this;
    }

}

