<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_search.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>RpbSearchQueryReq</code>
 */
class RpbSearchQueryReq extends \Google\Protobuf\Internal\Message
{
    /**
     * Query string
     *
     * Generated from protobuf field <code>bytes q = 1;</code>
     */
    protected $q = '';
    /**
     * Index
     *
     * Generated from protobuf field <code>bytes index = 2;</code>
     */
    protected $index = '';
    /**
     * Limit rows
     *
     * Generated from protobuf field <code>uint32 rows = 3;</code>
     */
    protected $rows = null;
    /**
     * Starting offset
     *
     * Generated from protobuf field <code>uint32 start = 4;</code>
     */
    protected $start = null;
    /**
     * Sort order
     *
     * Generated from protobuf field <code>bytes sort = 5;</code>
     */
    protected $sort = null;
    /**
     * Inline fields filtering query
     *
     * Generated from protobuf field <code>bytes filter = 6;</code>
     */
    protected $filter = null;
    /**
     * Default field
     *
     * Generated from protobuf field <code>bytes df = 7;</code>
     */
    protected $df = null;
    /**
     * Default op
     *
     * Generated from protobuf field <code>bytes op = 8;</code>
     */
    protected $op = null;
    /**
     * Return fields limit (for ids only, generally)
     *
     * Generated from protobuf field <code>repeated bytes fl = 9;</code>
     */
    private $fl;
    /**
     * Presort (key / score)
     *
     * Generated from protobuf field <code>bytes presort = 10;</code>
     */
    protected $presort = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $q
     *           Query string
     *     @type string $index
     *           Index
     *     @type int $rows
     *           Limit rows
     *     @type int $start
     *           Starting offset
     *     @type string $sort
     *           Sort order
     *     @type string $filter
     *           Inline fields filtering query
     *     @type string $df
     *           Default field
     *     @type string $op
     *           Default op
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $fl
     *           Return fields limit (for ids only, generally)
     *     @type string $presort
     *           Presort (key / score)
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakSearch::initOnce();
        parent::__construct($data);
    }

    /**
     * Query string
     *
     * Generated from protobuf field <code>bytes q = 1;</code>
     * @return string
     */
    public function getQ()
    {
        return $this->q;
    }

    /**
     * Query string
     *
     * Generated from protobuf field <code>bytes q = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setQ($var)
    {
        GPBUtil::checkString($var, False);
        $this->q = $var;

        return $this;
    }

    /**
     * Index
     *
     * Generated from protobuf field <code>bytes index = 2;</code>
     * @return string
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Index
     *
     * Generated from protobuf field <code>bytes index = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkString($var, False);
        $this->index = $var;

        return $this;
    }

    /**
     * Limit rows
     *
     * Generated from protobuf field <code>uint32 rows = 3;</code>
     * @return int
     */
    public function getRows()
    {
        return isset($this->rows) ? $this->rows : 0;
    }

    public function hasRows()
    {
        return isset($this->rows);
    }

    public function clearRows()
    {
        unset($this->rows);
    }

    /**
     * Limit rows
     *
     * Generated from protobuf field <code>uint32 rows = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRows($var)
    {
        GPBUtil::checkUint32($var);
        $this->rows = $var;

        return $this;
    }

    /**
     * Starting offset
     *
     * Generated from protobuf field <code>uint32 start = 4;</code>
     * @return int
     */
    public function getStart()
    {
        return isset($this->start) ? $this->start : 0;
    }

    public function hasStart()
    {
        return isset($this->start);
    }

    public function clearStart()
    {
        unset($this->start);
    }

    /**
     * Starting offset
     *
     * Generated from protobuf field <code>uint32 start = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setStart($var)
    {
        GPBUtil::checkUint32($var);
        $this->start = $var;

        return $this;
    }

    /**
     * Sort order
     *
     * Generated from protobuf field <code>bytes sort = 5;</code>
     * @return string
     */
    public function getSort()
    {
        return isset($this->sort) ? $this->sort : '';
    }

    public function hasSort()
    {
        return isset($this->sort);
    }

    public function clearSort()
    {
        unset($this->sort);
    }

    /**
     * Sort order
     *
     * Generated from protobuf field <code>bytes sort = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSort($var)
    {
        GPBUtil::checkString($var, False);
        $this->sort = $var;

        return $this;
    }

    /**
     * Inline fields filtering query
     *
     * Generated from protobuf field <code>bytes filter = 6;</code>
     * @return string
     */
    public function getFilter()
    {
        return isset($this->filter) ? $this->filter : '';
    }

    public function hasFilter()
    {
        return isset($this->filter);
    }

    public function clearFilter()
    {
        unset($this->filter);
    }

    /**
     * Inline fields filtering query
     *
     * Generated from protobuf field <code>bytes filter = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, False);
        $this->filter = $var;

        return $this;
    }

    /**
     * Default field
     *
     * Generated from protobuf field <code>bytes df = 7;</code>
     * @return string
     */
    public function getDf()
    {
        return isset($this->df) ? $this->df : '';
    }

    public function hasDf()
    {
        return isset($this->df);
    }

    public function clearDf()
    {
        unset($this->df);
    }

    /**
     * Default field
     *
     * Generated from protobuf field <code>bytes df = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setDf($var)
    {
        GPBUtil::checkString($var, False);
        $this->df = $var;

        return $this;
    }

    /**
     * Default op
     *
     * Generated from protobuf field <code>bytes op = 8;</code>
     * @return string
     */
    public function getOp()
    {
        return isset($this->op) ? $this->op : '';
    }

    public function hasOp()
    {
        return isset($this->op);
    }

    public function clearOp()
    {
        unset($this->op);
    }

    /**
     * Default op
     *
     * Generated from protobuf field <code>bytes op = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setOp($var)
    {
        GPBUtil::checkString($var, False);
        $this->op = $var;

        return $this;
    }

    /**
     * Return fields limit (for ids only, generally)
     *
     * Generated from protobuf field <code>repeated bytes fl = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFl()
    {
        return $this->fl;
    }

    /**
     * Return fields limit (for ids only, generally)
     *
     * Generated from protobuf field <code>repeated bytes fl = 9;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFl($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->fl = $arr;

        return $this;
    }

    /**
     * Presort (key / score)
     *
     * Generated from protobuf field <code>bytes presort = 10;</code>
     * @return string
     */
    public function getPresort()
    {
        return isset($this->presort) ? $this->presort : '';
    }

    public function hasPresort()
    {
        return isset($this->presort);
    }

    public function clearPresort()
    {
        unset($this->presort);
    }

    /**
     * Presort (key / score)
     *
     * Generated from protobuf field <code>bytes presort = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setPresort($var)
    {
        GPBUtil::checkString($var, False);
        $this->presort = $var;

        return $this;
    }

}

