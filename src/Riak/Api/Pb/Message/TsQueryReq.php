<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_ts.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Dispatch a query to Riak
 *
 * Generated from protobuf message <code>TsQueryReq</code>
 */
class TsQueryReq extends \Google\Protobuf\Internal\Message
{
    /**
     * left optional to support parameterized queries in the future
     *
     * Generated from protobuf field <code>.TsInterpolation query = 1;</code>
     */
    protected $query = null;
    /**
     * Generated from protobuf field <code>bool stream = 2;</code>
     */
    protected $stream = null;
    /**
     * chopped up coverage plan per-req
     *
     * Generated from protobuf field <code>bytes cover_context = 3;</code>
     */
    protected $cover_context = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Basho\Riak\Api\Pb\Message\TsInterpolation $query
     *           left optional to support parameterized queries in the future
     *     @type bool $stream
     *     @type string $cover_context
     *           chopped up coverage plan per-req
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakTs::initOnce();
        parent::__construct($data);
    }

    /**
     * left optional to support parameterized queries in the future
     *
     * Generated from protobuf field <code>.TsInterpolation query = 1;</code>
     * @return \Basho\Riak\Api\Pb\Message\TsInterpolation
     */
    public function getQuery()
    {
        return isset($this->query) ? $this->query : null;
    }

    public function hasQuery()
    {
        return isset($this->query);
    }

    public function clearQuery()
    {
        unset($this->query);
    }

    /**
     * left optional to support parameterized queries in the future
     *
     * Generated from protobuf field <code>.TsInterpolation query = 1;</code>
     * @param \Basho\Riak\Api\Pb\Message\TsInterpolation $var
     * @return $this
     */
    public function setQuery($var)
    {
        GPBUtil::checkMessage($var, \Basho\Riak\Api\Pb\Message\TsInterpolation::class);
        $this->query = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool stream = 2;</code>
     * @return bool
     */
    public function getStream()
    {
        return isset($this->stream) ? $this->stream : false;
    }

    public function hasStream()
    {
        return isset($this->stream);
    }

    public function clearStream()
    {
        unset($this->stream);
    }

    /**
     * Generated from protobuf field <code>bool stream = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkBool($var);
        $this->stream = $var;

        return $this;
    }

    /**
     * chopped up coverage plan per-req
     *
     * Generated from protobuf field <code>bytes cover_context = 3;</code>
     * @return string
     */
    public function getCoverContext()
    {
        return isset($this->cover_context) ? $this->cover_context : '';
    }

    public function hasCoverContext()
    {
        return isset($this->cover_context);
    }

    public function clearCoverContext()
    {
        unset($this->cover_context);
    }

    /**
     * chopped up coverage plan per-req
     *
     * Generated from protobuf field <code>bytes cover_context = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCoverContext($var)
    {
        GPBUtil::checkString($var, False);
        $this->cover_context = $var;

        return $this;
    }

}

