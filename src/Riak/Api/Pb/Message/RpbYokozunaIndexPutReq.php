<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_yokozuna.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PUT request - Create a new index
 *
 * Generated from protobuf message <code>RpbYokozunaIndexPutReq</code>
 */
class RpbYokozunaIndexPutReq extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.RpbYokozunaIndex index = 1;</code>
     */
    protected $index = null;
    /**
     * Timeout value
     *
     * Generated from protobuf field <code>uint32 timeout = 2;</code>
     */
    protected $timeout = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Basho\Riak\Api\Pb\Message\RpbYokozunaIndex $index
     *     @type int $timeout
     *           Timeout value
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakYokozuna::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.RpbYokozunaIndex index = 1;</code>
     * @return \Basho\Riak\Api\Pb\Message\RpbYokozunaIndex
     */
    public function getIndex()
    {
        return isset($this->index) ? $this->index : null;
    }

    public function hasIndex()
    {
        return isset($this->index);
    }

    public function clearIndex()
    {
        unset($this->index);
    }

    /**
     * Generated from protobuf field <code>.RpbYokozunaIndex index = 1;</code>
     * @param \Basho\Riak\Api\Pb\Message\RpbYokozunaIndex $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkMessage($var, \Basho\Riak\Api\Pb\Message\RpbYokozunaIndex::class);
        $this->index = $var;

        return $this;
    }

    /**
     * Timeout value
     *
     * Generated from protobuf field <code>uint32 timeout = 2;</code>
     * @return int
     */
    public function getTimeout()
    {
        return isset($this->timeout) ? $this->timeout : 0;
    }

    public function hasTimeout()
    {
        return isset($this->timeout);
    }

    public function clearTimeout()
    {
        unset($this->timeout);
    }

    /**
     * Timeout value
     *
     * Generated from protobuf field <code>uint32 timeout = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkUint32($var);
        $this->timeout = $var;

        return $this;
    }

}

