<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_dt.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The response to a "Fetch" request. If the `include_context` option
 * is specified, an opaque "context" value will be returned along with
 * the user-friendly data. When sending an "Update" request, the
 * client should send this context as well, similar to how one would
 * send a vclock for KV updates. The `type` field indicates which
 * value type to expect. When the `value` field is missing from the
 * message, the client should interpret it as a "not found".
 *
 * Generated from protobuf message <code>DtFetchResp</code>
 */
class DtFetchResp extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes context = 1;</code>
     */
    protected $context = null;
    /**
     * Generated from protobuf field <code>.DtFetchResp.DataType type = 2;</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>.DtValue value = 3;</code>
     */
    protected $value = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $context
     *     @type int $type
     *     @type \Basho\Riak\Api\Pb\Message\DtValue $value
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakDt::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes context = 1;</code>
     * @return string
     */
    public function getContext()
    {
        return isset($this->context) ? $this->context : '';
    }

    public function hasContext()
    {
        return isset($this->context);
    }

    public function clearContext()
    {
        unset($this->context);
    }

    /**
     * Generated from protobuf field <code>bytes context = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setContext($var)
    {
        GPBUtil::checkString($var, False);
        $this->context = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.DtFetchResp.DataType type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.DtFetchResp.DataType type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Basho\Riak\Api\Pb\Message\DtFetchResp\DataType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.DtValue value = 3;</code>
     * @return \Basho\Riak\Api\Pb\Message\DtValue
     */
    public function getValue()
    {
        return isset($this->value) ? $this->value : null;
    }

    public function hasValue()
    {
        return isset($this->value);
    }

    public function clearValue()
    {
        unset($this->value);
    }

    /**
     * Generated from protobuf field <code>.DtValue value = 3;</code>
     * @param \Basho\Riak\Api\Pb\Message\DtValue $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Basho\Riak\Api\Pb\Message\DtValue::class);
        $this->value = $var;

        return $this;
    }

}

