<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: riak_kv.proto

namespace Basho\Riak\Api\Pb\Message;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Segment of a coverage plan
 *
 * Generated from protobuf message <code>RpbCoverageEntry</code>
 */
class RpbCoverageEntry extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes ip = 1;</code>
     */
    protected $ip = '';
    /**
     * Generated from protobuf field <code>uint32 port = 2;</code>
     */
    protected $port = 0;
    /**
     * Some human readable description of the keyspace covered
     *
     * Generated from protobuf field <code>bytes keyspace_desc = 3;</code>
     */
    protected $keyspace_desc = null;
    /**
     * Opaque context to pass into 2I query.
     *
     * Generated from protobuf field <code>bytes cover_context = 4;</code>
     */
    protected $cover_context = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ip
     *     @type int $port
     *     @type string $keyspace_desc
     *           Some human readable description of the keyspace covered
     *     @type string $cover_context
     *           Opaque context to pass into 2I query.
     * }
     */
    public function __construct($data = NULL) {
        \Basho\Riak\Api\Pb\Message\RiakKv::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes ip = 1;</code>
     * @return string
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * Generated from protobuf field <code>bytes ip = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIp($var)
    {
        GPBUtil::checkString($var, False);
        $this->ip = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 port = 2;</code>
     * @return int
     */
    public function getPort()
    {
        return $this->port;
    }

    /**
     * Generated from protobuf field <code>uint32 port = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPort($var)
    {
        GPBUtil::checkUint32($var);
        $this->port = $var;

        return $this;
    }

    /**
     * Some human readable description of the keyspace covered
     *
     * Generated from protobuf field <code>bytes keyspace_desc = 3;</code>
     * @return string
     */
    public function getKeyspaceDesc()
    {
        return isset($this->keyspace_desc) ? $this->keyspace_desc : '';
    }

    public function hasKeyspaceDesc()
    {
        return isset($this->keyspace_desc);
    }

    public function clearKeyspaceDesc()
    {
        unset($this->keyspace_desc);
    }

    /**
     * Some human readable description of the keyspace covered
     *
     * Generated from protobuf field <code>bytes keyspace_desc = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKeyspaceDesc($var)
    {
        GPBUtil::checkString($var, False);
        $this->keyspace_desc = $var;

        return $this;
    }

    /**
     * Opaque context to pass into 2I query.
     *
     * Generated from protobuf field <code>bytes cover_context = 4;</code>
     * @return string
     */
    public function getCoverContext()
    {
        return $this->cover_context;
    }

    /**
     * Opaque context to pass into 2I query.
     *
     * Generated from protobuf field <code>bytes cover_context = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCoverContext($var)
    {
        GPBUtil::checkString($var, False);
        $this->cover_context = $var;

        return $this;
    }

}

